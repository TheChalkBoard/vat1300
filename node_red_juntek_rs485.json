[{"id":"e6fd8163.23991","type":"function","z":"af172f10.bae62","name":"Parse","func":"const BATT_AMP_HOURS = 400.0  //total amp-hours of battery bank\n\n//look for header before grabbing data\n//the third number is the frequency of the unit A=1, B=2, etc..\n//the forth number is the address\nvar header = [170, 28, 1, 27];  //Freq=A=1, Address = 27\nvar body = msg.payload;\nfor (i = 0; i < header.length; i++) {\n    if (header[i] != body[i]) {\n        return null;\n    }\n}\n\n// Voltage 4 * 256 + 5 as 16-bit unsigned\nvar voltage = body[4] << 8 | body[5];\nvoltage /= 100.0;\n\n// Current 6 * 256 + 7 as 16-bit signed\nvar current = body[6] << 8 | body[7];\nif (current & 0x8000) {\n    current = -((current ^ 0xFFFF) + 1);\n}\ncurrent /= 10.0;\n\n// Wattage 8..12 as 32-bit unsigned\nvar wattage = body[8] << 24 | \n              body[9] << 16 |\n              body[10] << 8 |\n              body[11];\nwattage /= 1000.0;\n\n// Amp Hours 12..16 as 32-bit unsigned\nvar amp_hrs = body[12] << 24 | \n              body[13] << 16 |\n              body[14] << 8 |\n              body[15];\namp_hrs /= 1000.0;\n\n// Watt Hours 16..20 as 32-bit unsigned\nvar watt_hrs = body[16] << 24 | \n               body[17] << 16 |\n               body[18] << 8 |\n               body[19];\nwatt_hrs /= 1000.0;\n\n// Seconds 20..24 as 32-bit unsigned\nvar time_s = body[20] << 24 | \n             body[21] << 16 |\n             body[22] << 8 |\n             body[23];\n\n// Status flag\nvar status_on = !(body[24]);\n\n// Temperature 25 as 8-bit signed\nvar temp = body[25];\nif (temp & 0x80) {\n    body = -((body ^ 0xFF) + 1);\n}\n\n// Batter state-of-charge\nvar batt_soc = (BATT_AMP_HOURS - amp_hrs) /\n               BATT_AMP_HOURS * 100.0;\n\nmsg.payload = { voltage: voltage,\n                current: current,\n                wattage: wattage,\n                amp_hrs: amp_hrs,\n                watt_hrs: watt_hrs,\n                time_s: time_s,\n                status_on: status_on,\n                temp: temp,\n                batt_soc: batt_soc };\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":360,"wires":[["6ea3229b.2e2f9c"]]}]